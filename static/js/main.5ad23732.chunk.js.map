{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","person","mother","father","name","sex","born","died","slug","to","classNames","PeopleTable","people","useParams","selectedSlug","getParent","parentName","parent","find","map","motherName","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setLoading","hasLoadingError","setLoadingError","loadPeople","peopleFromServer","useEffect","length","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5ad23732.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\nexport interface Props {\n  person: Person,\n  mother: string | Person,\n  father: string | Person,\n}\n\nexport const PersonLink: FC<Props> = ({\n  person,\n  mother,\n  father,\n}) => {\n  const {\n    name, sex, born, died, slug,\n  } = person;\n\n  return (\n    <>\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames(\n            { 'has-text-danger': sex === 'f' },\n          )}\n        >\n          {name}\n        </Link>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {typeof mother === 'string' ? mother : (\n          <Link\n            to={`../${mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {mother.name}\n          </Link>\n        )}\n      </td>\n      <td>\n        {typeof father === 'string' ? father : (\n          <Link\n            to={`../${father.slug}`}\n          >\n            {father.name}\n          </Link>\n        )}\n      </td>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\nexport interface Props {\n  people: Person[],\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug: selectedSlug = '' } = useParams();\n\n  const getParent = (parentName: string | null) => {\n    if (!parentName) {\n      return '-';\n    }\n\n    const parent = people.find(person => person.name === parentName);\n\n    if (parent) {\n      return parent;\n    }\n\n    return parentName;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          return (\n            <tr\n              key={person.name}\n              data-cy=\"person\"\n              className={classNames(\n                { 'has-background-warning': person.slug === selectedSlug },\n              )}\n            >\n              <PersonLink\n                person={person}\n                mother={getParent(person.motherName)}\n                father={getParent(person.fatherName)}\n              />\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [hasLoadingError, setLoadingError] = useState(false);\n\n  const loadPeople = async () => {\n    try {\n      setLoading(true);\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch (error) {\n      setLoadingError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? <Loader /> : (\n            <>\n              {hasLoadingError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!people.length && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              <PeopleTable people={people} />\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}